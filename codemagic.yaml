workflows:
  release:
    environment:
      vars:
        GH_USER: madispp
        GH_PAT: Encrypted(Z0FBQUFBQmQxcFUxdDNKMVNkOGdENlZrdVdKUkxwaTdlWVNPQU56LTczVjFoZk1xalVTVlh1YzhLRFotaGFIemF4NkdYN3BicHdRcmxJcmZhbG5rb1lTelFsUXZCY0ZUN0U3ZW4zTEoyN0FqX2wxUUZKdV9LVTJPLVF5aXpzekMzOWUyTkNIX3Vpam8=)
        REPOSITORY: codemagic-ci-cd/cli-tools
    name: Generate binary distribution wheel
    scripts:
      - git tag -a v$(python3 setup.py --version) -m "Release v$(python3 setup.py --version)"
      - python3 setup.py bdist_wheel
      - git push "https://$GH_USER:$GH_PAT@github.com/$REPOSITORY" --tags
      - |
        # Prepare release metadata
        TAG_NAME=v$(python3 setup.py --version)
        previous_version_line=$(grep -n "^Version " CHANGELOG.md | head -2 | tail -1 | cut -f1 -d:)
        head -n "$(($previous_version_line - 1))" CHANGELOG.md | tail +3 > release_notes.txt
        python3 -c "import json; json.dump({'tag_name': '$TAG_NAME', 'name': '$TAG_NAME', 'body': open('release_notes.txt').read().strip(), 'draft': True, 'prerelease': True}, open('release_payload.json', 'w'))"
      - |
        # Draft a release
        set -e

        curl -u "$GH_USER":"$GH_PAT" --silent --fail -H 'Content-Type: application/json' -X POST --data "@release_payload.json" "https://api.github.com/repos/${REPOSITORY}/releases" > release_response.json
        EDIT_URL=$(python3 -c "import json; print(json.load(open('release_response.json')).get('html_url').replace('/tag/', '/edit/'))")
        FILE_NAME=$(cd dist && ls *.whl | tail -n1)
        UPLOAD_URL=$(python3 -c "import json; print(json.load(open('release_response.json')).get('upload_url').replace('{?name,label}', '?name=$FILE_NAME'))")
        curl -u "$GH_USER":"$GH_PAT" --silent --fail -H 'Content-Type: application/x-wheel+zip' -X POST "$UPLOAD_URL" --data-binary "@dist/$FILE_NAME" > /dev/null
        echo "Draft release created. Finalize it at $EDIT_URL"
    artifacts:
      - dist/codemagic-*.whl
