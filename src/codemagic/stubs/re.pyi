# Stubs for re (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import enum
from typing import Any

class RegexFlag(enum.IntFlag):
    ASCII: Any = ...
    IGNORECASE: Any = ...
    LOCALE: Any = ...
    UNICODE: Any = ...
    MULTILINE: Any = ...
    DOTALL: Any = ...
    VERBOSE: Any = ...
    A: Any = ...
    I: Any = ...
    L: Any = ...
    U: Any = ...
    M: Any = ...
    S: Any = ...
    X: Any = ...
    TEMPLATE: Any = ...
    T: Any = ...
    DEBUG: Any = ...

error: Any

def match(pattern: Any, string: Any, flags: int = ...): ...
def fullmatch(pattern: Any, string: Any, flags: int = ...): ...
def search(pattern: Any, string: Any, flags: int = ...): ...
def sub(pattern: Any, repl: Any, string: Any, count: int = ..., flags: int = ...): ...
def subn(pattern: Any, repl: Any, string: Any, count: int = ..., flags: int = ...): ...
def split(pattern: Any, string: Any, maxsplit: int = ..., flags: int = ...): ...
def findall(pattern: Any, string: Any, flags: int = ...): ...
def finditer(pattern: Any, string: Any, flags: int = ...): ...
def compile(pattern: Any, flags: int = ...): ...
def purge() -> None: ...
def template(pattern: Any, flags: int = ...): ...
def escape(pattern: Any): ...

Pattern: Any
Match: Any

class Scanner:
    lexicon: Any = ...
    scanner: Any = ...
    def __init__(self, lexicon: Any, flags: int = ...) -> None: ...
    match: Any = ...
    def scan(self, string: Any): ...

# Names in __all__ with no definition:
A = RegexFlag.A
ASCII = RegexFlag.ASCII
DOTALL = RegexFlag.DOTALL
I = RegexFlag.I
IGNORECASE = RegexFlag.IGNORECASE
L = RegexFlag.L
LOCALE = RegexFlag.LOCALE
M = RegexFlag.M
MULTILINE = RegexFlag.MULTILINE
S = RegexFlag.S
U = RegexFlag.U
UNICODE = RegexFlag.UNICODE
VERBOSE = RegexFlag.VERBOSE
X = RegexFlag.X
